# Travis CI Configuration File
# Thanks to the Wordpress team.

# Only test the master branch.
branches:
  only:
    - "master"

# Tell Travis CI we're using PHP.
language: php

# PHP version used in first build configuration.
php:
    - "5.3"

# WordPress version used in first build configuration.
env:
    - WP_VERSION=master

# Next we define our matrix of additional build configurations to test against.
# The versions listed above will automatically create our first configuration,
# so it doesn't need to be re-defined below.

# WP_VERSION specifies the tag to use. The way these tests are configured to run
# requires at least WordPress 3.8. Specify "master" to test against SVN trunk.

# Note that Travis CI supports listing these above to automatically build a
# matrix of configurations, but we're being nice here by manually building a
# total of four configurations even though we're testing 4 versions of PHP
# along with 2 versions of WordPress (which would build 8 configs otherwise).
# This takes half as long to run while still providing adequate coverage.

matrix:
  include:
    - php: "5.5"
      env: WP_VERSION=master
    - php: "5.4"
      env: WP_VERSION=3.9
    - php: "5.3"
      env: WP_VERSION=3.8

before_install:
    - sudo apt-get update

install:
    - npm install -g grunt-cli
    - npm install -g casperjs
    - sudo apt-get install apache2 -y
    - sudo apt-get install libapache2-mod-php5 libapache2-mod-auth-mysql php5-mysql -y

# Clones WordPress and configures our testing environment.
before_script:
    - export PLUGIN_SLUG=$(basename $(pwd))
    - export REPO_BASE=`pwd`
    - sh tests/.travis_config.sh # Installs wordpress on the WebServer.
    - sh tests/.travis_before.sh # Creates wordpress test environment.
    - cd "$REPO_BASE/tests"
    - npm install

script:
    - casperjs test bootstrap.js # Installs the plugins on the WebServer.
    - sh .travis_run.sh # Runs the tests.
